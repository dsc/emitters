require 'buildtools'


task \build 'Build coco sources' ->
    coco <[ -bjc package.json.co ]>
    coco <[ -bc -o lib src ]>

task \watch 'Watch sources for changes' ->
    coco <[ -bcw -o lib src ]>

task \dist 'Concat and compress sources for browser' ->
    Seq()
        .seq ->
            say 'Regenerating package.json...'
            sh 'coco -bjc package.json.co', this
        .seq ->
            say 'Updating version in bower.json...'
            bower = require './bower.json'
            bower.{ version } = require './package.json'
            write 'bower.json', JSON.stringify(bower, null, 4) + '\n'
            @ok()
        .seq ->
            say 'Building sources...'
            sh 'coco -bc -o lib src', this
        .seq ->
            say 'Browserifying...'
            sh 'browserify ./lib --standalone emitters -r ./lib:emitters  --debug -t require-key --no-builtins -x events
                | exorcist emitters.map', {-verbose}, this
        .seq (source) ->
            header = getHeader()
            write 'emitters.js', header + source
            say 'Minifying...'
            write 'emitters.min.js', header + minify source
            @ok()
        .catch (err) ->
            console.error "Error! #err", err
            err = new Error err if typeof err is 'string'
            throw err
        .seq ->
            say 'Done!'
            @ok()
    

getHeader = ->
    require './package.json' |>
        """
            /*
             *      #{&name} -- #{&version}
             *      (c) 2012-#{ new Date().getFullYear() } #{&author}
             *      #{&name} is freely distributable under the MIT license.
             *      
             *      For all details and documentation:
             *      #{&homepage}
             */
            
        """


